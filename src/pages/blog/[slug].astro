---
import BaseLayout from "../../layouts/BaseLayout.astro";
import Header from "../../components/Header.astro";
import { getCollection } from 'astro:content';

export const prerender = true;
export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({ params: { slug: post.slug }, props: { post } }));
}

const { post } = Astro.props as { post: any };
if (!post) throw new Error('Post no encontrado');
const { Content } = await post.render();
---
<BaseLayout title={`${post.data.title} | Blog`}>
  <Fragment slot="header"><Header /></Fragment>
  <article class="prose max-w-none">
    <h1>{post.data.title}</h1>
    {
      post.data.cover && (() => {
        const assets = import.meta.glob('../../assets/images/**/*', { eager: true, import: 'default' });
        const coverPath = post.data.cover;
        function resolveCover(path) {
          if (!path) return undefined;
          if (path.startsWith('/src/')) {
            // Glob keys are '../../assets/images/...'
            const key = '../..' + path.replace('/src', '');
            if (assets[key]) return assets[key];
          }
          const idx = path.indexOf('assets/images/');
          if (idx !== -1) {
            const tail = path.slice(idx);
            const key = '../..' + '/' + tail.replace(/^assets\//, 'assets/');
            if (assets[key]) return assets[key];
          }
          const file = path.split('/').pop();
          if (file) {
            const match = Object.keys(assets).find((k) => k.endsWith('/' + file));
            if (match) return assets[match];
          }
          return undefined;
        }
        const resolved = resolveCover(coverPath);
        const resolvedUrl = typeof resolved === 'string'
          ? resolved
          : (resolved && typeof resolved === 'object' && 'src' in resolved ? resolved.src : undefined);
        if (import.meta.env.DEV && (/^(\/|\.\/|\.\.\/)/.test(coverPath) || coverPath.startsWith('/src/')) && !resolved) {
          console.warn(`[Blog post] No se pudo resolver la portada local: ${coverPath}. Aseg√∫rate de que exista en src/assets/images y usa una ruta relativa, por ejemplo ../../assets/images/...`);
        }
        return resolvedUrl
          ? (<img src={resolvedUrl} alt={post.data.title} class="rounded-lg" loading="lazy" />)
          : (<img src={coverPath} alt={post.data.title} class="rounded-lg" loading="lazy" />);
      })()
    }
    <p class="text-sm text-slate-500">{new Date(post.data.date).toLocaleDateString('es')}</p>
    <Content />
  </article>
</BaseLayout>
